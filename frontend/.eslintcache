[{"D:\\p-400\\makeup_store-master\\frontend\\src\\index.js":"1","D:\\p-400\\makeup_store-master\\frontend\\src\\store.js":"2","D:\\p-400\\makeup_store-master\\frontend\\src\\App.js":"3","D:\\p-400\\makeup_store-master\\frontend\\src\\reportWebVitals.js":"4","D:\\p-400\\makeup_store-master\\frontend\\src\\reducers\\cartReducers.js":"5","D:\\p-400\\makeup_store-master\\frontend\\src\\reducers\\productReducers.js":"6","D:\\p-400\\makeup_store-master\\frontend\\src\\reducers\\userReducers.js":"7","D:\\p-400\\makeup_store-master\\frontend\\src\\components\\Header.js":"8","D:\\p-400\\makeup_store-master\\frontend\\src\\reducers\\orderReducers.js":"9","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\CartScreen.js":"10","D:\\p-400\\makeup_store-master\\frontend\\src\\components\\Footer.js":"11","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\ProductScreen.js":"12","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\ShippingScreen.js":"13","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\OrderScreen.js":"14","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\HomeScreen.js":"15","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\PlaceOrderScreen.js":"16","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\PaymentScreen.js":"17","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\UserEditScreen.js":"18","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\ProductListScreen.js":"19","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\OrderListScreen.js":"20","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\UserListScreen.js":"21","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\ProductEditScreen.js":"22","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\HomeCategoryScree.js":"23","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\CategoryScreen.js":"24","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\DashboardScreen.js":"25","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\auth\\ConfirmPassword.js":"26","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\auth\\LoginScreen.js":"27","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\auth\\RegisterScreen2.js":"28","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\auth\\ProfileScreen.js":"29","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\auth\\EmailVerifyScreen.js":"30","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\auth\\ResetPassword.js":"31","D:\\p-400\\makeup_store-master\\frontend\\src\\components\\SearchBox.js":"32","D:\\p-400\\makeup_store-master\\frontend\\src\\components\\Rating.js":"33","D:\\p-400\\makeup_store-master\\frontend\\src\\components\\Message.js":"34","D:\\p-400\\makeup_store-master\\frontend\\src\\components\\FormContainer.js":"35","D:\\p-400\\makeup_store-master\\frontend\\src\\components\\Loader.js":"36","D:\\p-400\\makeup_store-master\\frontend\\src\\components\\CheckoutSteps.js":"37","D:\\p-400\\makeup_store-master\\frontend\\src\\constants\\cartConstants.js":"38","D:\\p-400\\makeup_store-master\\frontend\\src\\constants\\productConstants.js":"39","D:\\p-400\\makeup_store-master\\frontend\\src\\constants\\userConstants.js":"40","D:\\p-400\\makeup_store-master\\frontend\\src\\constants\\orderConstants.js":"41","D:\\p-400\\makeup_store-master\\frontend\\src\\actions\\userActions.js":"42","D:\\p-400\\makeup_store-master\\frontend\\src\\actions\\cartActions.js":"43","D:\\p-400\\makeup_store-master\\frontend\\src\\actions\\orderActions.js":"44","D:\\p-400\\makeup_store-master\\frontend\\src\\actions\\productActions.js":"45","D:\\p-400\\makeup_store-master\\frontend\\src\\admin_components\\AdminSideBar.js":"46","D:\\p-400\\makeup_store-master\\frontend\\src\\components\\Paginate.js":"47","D:\\p-400\\makeup_store-master\\frontend\\src\\components\\TopProducts.js":"48","D:\\p-400\\makeup_store-master\\frontend\\src\\components\\Product.js":"49","D:\\p-400\\makeup_store-master\\frontend\\src\\components\\Category.js":"50","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\newpage.js":"51"},{"size":595,"mtime":1660750445456,"results":"52","hashOfConfig":"53"},{"size":2648,"mtime":1661100091457,"results":"54","hashOfConfig":"53"},{"size":3190,"mtime":1661100369266,"results":"55","hashOfConfig":"53"},{"size":362,"mtime":1660241092000,"results":"56","hashOfConfig":"53"},{"size":1486,"mtime":1660241092000,"results":"57","hashOfConfig":"53"},{"size":5835,"mtime":1660241092000,"results":"58","hashOfConfig":"53"},{"size":4784,"mtime":1660241092000,"results":"59","hashOfConfig":"53"},{"size":4917,"mtime":1660722024593,"results":"60","hashOfConfig":"53"},{"size":4105,"mtime":1660241092000,"results":"61","hashOfConfig":"53"},{"size":5883,"mtime":1660812754371,"results":"62","hashOfConfig":"53"},{"size":1940,"mtime":1661006103340,"results":"63","hashOfConfig":"53"},{"size":14874,"mtime":1661094498985,"results":"64","hashOfConfig":"53"},{"size":3710,"mtime":1661094850319,"results":"65","hashOfConfig":"53"},{"size":9390,"mtime":1661003580207,"results":"66","hashOfConfig":"53"},{"size":2307,"mtime":1661099260514,"results":"67","hashOfConfig":"53"},{"size":8129,"mtime":1661093902146,"results":"68","hashOfConfig":"53"},{"size":1778,"mtime":1660241092000,"results":"69","hashOfConfig":"53"},{"size":7907,"mtime":1661076396917,"results":"70","hashOfConfig":"53"},{"size":5314,"mtime":1660241092000,"results":"71","hashOfConfig":"53"},{"size":3968,"mtime":1660578415022,"results":"72","hashOfConfig":"53"},{"size":3843,"mtime":1660727839314,"results":"73","hashOfConfig":"53"},{"size":9991,"mtime":1660746515186,"results":"74","hashOfConfig":"53"},{"size":6002,"mtime":1660646964699,"results":"75","hashOfConfig":"53"},{"size":9268,"mtime":1661070780549,"results":"76","hashOfConfig":"53"},{"size":2485,"mtime":1660648388324,"results":"77","hashOfConfig":"53"},{"size":3666,"mtime":1660241092000,"results":"78","hashOfConfig":"53"},{"size":3558,"mtime":1660640009207,"results":"79","hashOfConfig":"53"},{"size":6650,"mtime":1660641506389,"results":"80","hashOfConfig":"53"},{"size":9672,"mtime":1660640772305,"results":"81","hashOfConfig":"53"},{"size":1186,"mtime":1660241092000,"results":"82","hashOfConfig":"53"},{"size":2513,"mtime":1660641766195,"results":"83","hashOfConfig":"53"},{"size":1130,"mtime":1660628351716,"results":"84","hashOfConfig":"53"},{"size":1886,"mtime":1660241092000,"results":"85","hashOfConfig":"53"},{"size":228,"mtime":1660241092000,"results":"86","hashOfConfig":"53"},{"size":378,"mtime":1660241092000,"results":"87","hashOfConfig":"53"},{"size":412,"mtime":1660628706812,"results":"88","hashOfConfig":"53"},{"size":1593,"mtime":1660241092000,"results":"89","hashOfConfig":"53"},{"size":287,"mtime":1660241092000,"results":"90","hashOfConfig":"53"},{"size":1868,"mtime":1660547818331,"results":"91","hashOfConfig":"53"},{"size":1756,"mtime":1660241092000,"results":"92","hashOfConfig":"53"},{"size":1240,"mtime":1660241092000,"results":"93","hashOfConfig":"53"},{"size":8516,"mtime":1660241092000,"results":"94","hashOfConfig":"53"},{"size":1447,"mtime":1660241092000,"results":"95","hashOfConfig":"53"},{"size":6217,"mtime":1660241092000,"results":"96","hashOfConfig":"53"},{"size":7417,"mtime":1660813110711,"results":"97","hashOfConfig":"53"},{"size":3900,"mtime":1660241092000,"results":"98","hashOfConfig":"53"},{"size":869,"mtime":1661015219705,"results":"99","hashOfConfig":"53"},{"size":1297,"mtime":1660632683712,"results":"100","hashOfConfig":"53"},{"size":1682,"mtime":1661086976382,"results":"101","hashOfConfig":"53"},{"size":1577,"mtime":1660241092000,"results":"102","hashOfConfig":"53"},{"size":105,"mtime":1661100233501,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1wc7h19",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"106"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"106"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"106"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"106"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"106"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\p-400\\makeup_store-master\\frontend\\src\\index.js",[],["231","232"],"D:\\p-400\\makeup_store-master\\frontend\\src\\store.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\App.js",["233"],"D:\\p-400\\makeup_store-master\\frontend\\src\\reportWebVitals.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\reducers\\productReducers.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\reducers\\userReducers.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\components\\Header.js",["234","235","236"],"import { React, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown, Image } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\nimport './style.css';\n\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n   \n\n\n\n\n    return (\n        <header>\n            <Navbar className=\"navbar-dark bg-dark pt-1 pb-1 shadow\" expand=\"lg\" fixed=\"top\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n\n                        <Navbar.Brand className=\"mr-0 mr-md-4\">\n\n                            <div>\n                                <div className=\"text-center \" > \n                                \n                                {/* <img src=\"https://mpng.subpng.com/20180512/rte/kisspng-beauty-parlour-cosmetics-make-up-artist-royalty-fr-5af6a1f05d3e73.6847260815261127523819.jpg\" heigth=\"50\" width=\"50\"></img> */}\n\n                                <i class=\"fas fa-laptop-house\"></i></div>\n                                <div className=\"text-center\">\n\n\n                                    <span class=\"text-info \"> <b>B</b></span>\n                                    <span className=\"text-danger\">e</span>\n                                    <span className=\"text-success\">a</span>\n                                    <span className=\"text-warning\">u</span> \n                                    <span className=\"text-danger\">t</span>\n                                    \n                                    <span class=\"text-info \">i</span>\n                                    <span className=\"text-danger\">f</span>\n                                    <span className=\"text-success\">l</span>\n                                    <span className=\"text-warning\">y</span> \n                                    \n                                    \n                                   \n                                </div>\n                            </div>\n\n\n\n\n\n                        </Navbar.Brand>\n                        \n                    </LinkContainer>\n                     \n                    <LinkContainer to='/cart' className=\"text-white active mr-0 mr-md-4\">\n                        <Nav.Link>\n                            <i className=\"fas fa-shopping-cart ct\"></i> cart <span class=\"badge badge-info ct3\">{cartItems.length > 0 ? (cartItems.reduce((acc, item) => acc + item.qty, 0)) : null}</span></Nav.Link>\n                    </LinkContainer>\n\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <SearchBox />\n                        <Nav className=\"ml-auto\">\n\n\n                            {userInfo && userInfo.firstName ? (\n                                <>\n                                    <Image src={`http://localhost:4000/${userInfo.profile_pic}`} width={40}\n                                        height={40} rounded />\n                                    <NavDropdown title={userInfo.firstName} id='username' className=\"active\">\n                                        <LinkContainer to='/profile'>\n                                            <NavDropdown.Item>Profile</NavDropdown.Item>\n                                        </LinkContainer>\n\n                                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                    </NavDropdown>\n                                </>\n\n                            ) : (<>\n\n                                <LinkContainer to='/register2'>\n                                    <Nav.Link><i className=\"fas fa-user\"></i>Register An Account </Nav.Link>\n                                </LinkContainer>\n                                <LinkContainer to='/login'>\n                                    <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                </LinkContainer>\n                            </>\n                            )}\n\n\n                            {userInfo && userInfo.isAdmin ? (\n                                <>\n                                    <LinkContainer to='/dashboard'>\n                                        <Nav.Link>Dashboard</Nav.Link>\n                                    </LinkContainer>\n                                </>\n\n                            ) : null}\n\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","D:\\p-400\\makeup_store-master\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\CartScreen.js",["237"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card, Container } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n     \n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? (\n                    <Message variant='info'>\n                        Your cart is empty <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                        <ListGroup variant='flush'>\n                            {cartItems.map(item => (\n                                <ListGroup.Item key={item.product}>\n                                    <Row>\n                                        <Col md={2}>\n                                            <Image src={`http://localhost:4000/${item.image}`} alt={item.name} fluid rounded />\n                                        </Col>\n                                        <Col md={3}>\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </Col>\n\n                                        <Col md={2}>\n                                            {\n                                                item.offer_percentage ? <>\n                                                    <span className=\"text-tl\">&#2547;{item.price}</span>  <br></br>\n                                                    &#2547;{item.offer_percentage ? parseFloat(item.price - ((item.price * item.offer_percentage) / 100)).toFixed(2) : null}\n                                                \n                                                \n                                                </>:\n                                                <>\n                                                        <span>&#2547;{item.price}</span>\n                                                </>\n                                            }\n                                           \n                                        </Col>\n\n                                          {/* cart box */}\n                                        \n                                        <Col md={2}>\n\n                                            <Form.Control\n                                                as=\"select\"\n                                                value={item.qty}\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                                            >\n                                                {\n\n                                                    [...Array(item.countInStock).keys()].map((x) => (\n                                                        <option key={x + 1} value={x + 1}>\n                                                            {x + 1}\n                                                        </option>\n                                                    ))\n                                                }\n\n                                              {/* delete cart */}\n                                            </Form.Control>\n                                        </Col>\n\n                                        <Col md={1}>\n                                            <Button\n                                                type='button'\n                                                variant='light'\n                                                onClick={() => removeFromCartHandler(item.product)}\n                                            >\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                \n                            ))}\n                        </ListGroup>\n                    )}\n            </Col>\n\n            <Col md={4}>\n                <Card >\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h3>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h3>\n                                Total &#2547;{cartItems.reduce((acc, item) => acc + item.qty * (item.offer_percentage ? parseFloat(item.price - ((item.price * item.offer_percentage) / 100)).toFixed(2) : item.price), 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item>\n                        <Button\n                            type='button'\n                            className='btn-block btn-md'\n                            disabled={cartItems.length === 0}\n                            onClick={checkoutHandler}\n                        >\n                            Proceed To Checkout\n                        </Button>\n                    </ListGroup.Item>\n\n\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen","D:\\p-400\\makeup_store-master\\frontend\\src\\components\\Footer.js",["238"],"import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\nfunction Footer() {\n    return (\n        <footer>\n                <Row className=\"bg-dark text-white p-4 mt-5\">\n                    <Col md={4}>\n\n                        <h4 className=\"text-white\">Links</h4>\n                        <Link to=\"/\" className=\"text-white\">About</Link>\n                       \n                        <p>Top product</p>\n\n                    </Col>\n                    <Col md={4}>\n                        <h5 className=\"text-white\">Our Address</h5>\n                        <address>\n                            121, Zindabazar Road<br></br>\n                            Sylhet, Bangladesh<br></br>\n                            \n                            <i class=\"fa fa-phone\"></i>: +852 1234 5678<br></br>\n                            <i class=\"fa fa-fax\"></i>: +852 8765 4321<br></br>\n                            <i class=\"fa fa-envelope\"></i>:\n                            <a href=\"mailto:jannat.liza089@gmail.com\" className=\"text-white\">jannat.liza089@gmail.com</a>\n                        </address>\n\n                    </Col>\n                    <Col><i class=\"fab fa-facebook-square ct2\"></i>\n                        <i class=\"fab fa-twitter-square ml-2 ct2\"></i>\n                        <i class=\"fab fa-google-plus ml-2 ct2\"></i>\n                        <i class=\"fab fa-instagram-square ml-2 ct2\"></i>\n                        <i class=\"fab fa-youtube ml-2 ct2\"></i>\n                        <i class=\"fab fa-linkedin ml-2 ct2\"></i>\n                        <i class=\"fas fa-envelope ml-2 ct2\"></i>\n                    </Col>\n                    \n                </Row>\n                <Row className=\"bg-dark text-white\">\n                    <Col className=\"text-center py-3\">Copyright &copy;Beautifly</Col>\n                </Row>\n     \n        </footer>\n    )\n}\n\nexport default Footer\n","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\ProductScreen.js",["239","240","241","242","243","244","245","246","247","248","249"],"D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\ShippingScreen.js",["250"],"D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\OrderScreen.js",["251"],"import React, { useState, useEffect, forwardRef, useRef } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nimport ReactToPrint, { PrintContextConsumer } from \"react-to-print\";\n\nconst ComponentToPrint = forwardRef(({ order }, ref) => {\n    return <div ref={ref}>\n        <ListGroup variant='flush'>\n            <ListGroup.Item>\n                <h2>Shipping</h2>\n                <p><strong>Name: </strong> {order.user.firstName}</p>\n                <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                <p>\n                    <strong>Shipping: </strong>\n                    {order.shippingAddress.address},  {order.shippingAddress.city}\n                    {'  '}\n\n                    {order.shippingAddress.postalCode},\n                    {'  '}\n\n                    {order.shippingAddress.phone},\n                    {'  '}\n                    {order.shippingAddress.country}\n                </p>\n\n                {order.order.isDelivered ? (\n                    <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                ) : (\n                    <Message variant='warning'>Not Delivered</Message>\n                )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n                <h2>Payment Method</h2>\n                <p>\n                    <strong>Method: </strong>\n                    {order.order.paymentMethod}\n                </p>\n                {order.order.isPaid ? (\n                    <Message variant='success'>Paid on {order.paidAt}</Message>\n                ) : (\n                    <Message variant='warning'>Not Paid</Message>\n                )}\n\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n                <h2>Order Items</h2>\n                {order.orderItems.length === 0 ? <Message variant='info'>\n                    Order is empty\n                </Message> : (\n                    <ListGroup variant='flush'>\n                        {order.orderItems.map((item, index) => (\n                            <ListGroup.Item key={index}>\n                                <Row>\n                                    <Col md={1}>\n                                        <Image src={`http://localhost:4000/${item.image}`} style={{maxHeight:'50px', maxWidth:'50px'}} alt={item.name} fluid rounded />\n                                    </Col>\n\n                                    <Col>\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                    </Col>\n\n                                    <Col md={4}>\n                                        {item.qty} X ৳{item.price} = ৳{(item.qty * item.price).toFixed(2)}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n            </ListGroup.Item>\n\n\n        </ListGroup>\n\n    </div>;\n});\n\nfunction OrderScreen({ match, history }) {\n    const ref = useRef();\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false) // initial state = false\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AX1CoUjgGlMFKWsHqVxZtP8WVDq4-K3ebdIvNoXpCdr6TWT0_VuW4JJTYDxiq0TexEWq7wtB5gnJvK4P'\n        script.async = true\n\n\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order.order._id !== orderId || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (order && !order.order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [order, dispatch, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order.order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n        <div>\n            <h1>Order: {order.order._Id}</h1>\n            <Row>\n\n                \n                <Col md={8}>\n                    <div>\n\n                        <ComponentToPrint ref={ref} order={order} />\n                        <ReactToPrint content={() => ref.current}>\n                            <PrintContextConsumer>\n                                {({ handlePrint }) => (\n                                    <button class=\" text-right btn btn-info\" onClick={handlePrint}>Get Invoice</button>\n                                )}\n                            </PrintContextConsumer>\n                        </ReactToPrint>\n                    </div>\n\n\n                </Col>\n\n\n                <Col md={4}>\n                    <Card>\n\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>৳{order.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            {/* <ListGroup.Item>\n                                        <Row>\n                                            <Col>Shipping:</Col>\n                                            <Col>৳{order.order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item> */}\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>৳{order.order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>৳{order.order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n\n\n                            {order && order.order && order.order.isPaid ? null : (\n                                <ListGroup.Item>\n\n                                    {loadingPay && <Loader />}\n\n                                    {!sdkReady ? (\n                                        <>\n                                            <Loader />\n                                        </>\n\n                                    ) : (\n                                        <PayPalButton\n                                            amount={(order.order.totalPrice / 100)}\n                                            onSuccess={successPaymentHandler}\n                                        />\n                                    )}\n                                </ListGroup.Item>\n                            )}\n\n\n                        </ListGroup>\n                        {loadingDeliver && <Loader />}\n                        {userInfo && userInfo.isAdmin && !order.order.isDelivered && (\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn btn-block'\n                                    onClick={deliverHandler}\n                                >\n                                    Mark As Delivered\n                                </Button>\n                            </ListGroup.Item>\n                        )}\n                    </Card>\n                </Col>\n            </Row>\n        </div >\n    )\n}\n\nexport default OrderScreen\n","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\HomeScreen.js",["252","253","254","255"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Container, Form, ListGroup } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts } from '../actions/productActions'\nimport TopProducts from '../components/TopProducts'\nimport Category from '../components/Category'\n\n\n\n\n\nfunction HomeScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n\n\n    const { error, loading, products, categories, page, pages, topProducts } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n\n\n            <Row>\n                <Col md={12}>\n                    <TopProducts products={topProducts}/>\n                </Col>\n                <Col md={12}>\n                    <Category categories={categories} />\n                </Col>\n            </Row>\n\n\n\n            <h5 className=\"mt-5 mb-3 text-center\">{keyword && keyword.split('?keyword=')[1].split('&')[0].length > 0 ? 'search results' : 'latest product for you'}</h5>\n        \n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div className=\"pt-3\">\n                        <Row className='=\"p-2 bg-white'>\n                           \n                            <Col md={12}>\n\n\n                                <Row>\n\n                                    {products.map(product => (\n                                        <Col className=\"m-0 p-0\" key={product._id} sm={12} md={6} lg={4} xl={3} >\n                                            <Product product={product} />\n                                        </Col>\n                                    ))}\n                                </Row>\n                                <Paginate page={page} pages={pages} keyword={keyword} />\n                            </Col>\n                        </Row>\n\n                    </div>\n            }\n\n        </div>\n\n    )\n}\n\nexport default HomeScreen\n","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\PlaceOrderScreen.js",["256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279"],"D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\PaymentScreen.js",["280","281"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col, Container } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <div className=\"large-devices-margin\">\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n        </div>\n    )\n}\n\nexport default PaymentScreen\n","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\UserEditScreen.js",["282"],"D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\ProductListScreen.js",["283"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\nimport AdminSideBar from '../admin_components/AdminSideBar'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products Screen</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3 btn-sm' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col md={3}>\n                    <AdminSideBar/>\n                </Col>\n                <Col md={9}>\n               \n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>{product.price}</td>\n                                            <td>{product.category && product.category.name}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n                     </Col>\n                     </Row>\n        </div>\n    )\n}\n\nexport default ProductListScreen","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\OrderListScreen.js",["284"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\nimport AdminSideBar from '../admin_components/AdminSideBar'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n     console.log(\"orders \", orders);\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1 >Orders Screen</h1>\n            <Row>\n                <Col md={3}>\n                    <AdminSideBar/>\n                </Col>\n                <Col>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm '>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>Total</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user && order.user.firstName}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>৳{order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                    \n                                             <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                            \n                                        ) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>{order.isDelivered ? (\n                                             <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n                    </Col>\n                    </Row>\n        </div>\n    )\n}\n\nexport default OrderListScreen","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\UserListScreen.js",["285","286","287"],"import {React as useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\nimport AdminSideBar from '../admin_components/AdminSideBar'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users Screen</h1>\n            <Row>\n                <Col md={3}>\n                    <AdminSideBar/>\n\n                </Col>\n                <Col md={9}>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.firstName}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`} disabled={userInfo._id == user._id ? true : false}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            {/* <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button> */}\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n                    </Col>\n                    </Row>\n        </div>\n    )\n}\n\nexport default UserListScreen\n","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\ProductEditScreen.js",["288","289","290","291","292","293","294","295"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Image } from 'react-bootstrap'\nimport { Label, Input, FormText, FormGroup } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\n\n\nfunction ProductEditScreen({ match, history }) {\n\n    const productId = match.params.id\n\n   const [category, setCategory] = useState('');\n    const [catId, setCatId] = useState(null);\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [price, setPrice] = useState(null);\n    const [tax_percentage, setText_percentage] = useState(null);\n    const [countInStock, setCountInStock] = useState(null);\n    const [image, setImage] = useState(null);\n    const [id, setId] = useState(null);\n    const [brand, setBrand] = useState('');\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { error, loading, product, categories } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\n\n    const handleCategory = (e) =>{\n        setCatId(e.target.value);\n        const cat = categories.find(cat => cat._id === e.target.value);\n        setCategory(cat.name);\n      \n    }\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n\n            history.push('/admin/productlist')\n        } else {\n            const flag = product && product._id && product._id === productId ? 'yes' : 'no';\n            console.log(typeof product._id, ' ', typeof productId)\n            if (!product.name || flag === 'no') {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name);\n                setDescription(product.description)\n                setPrice(product.price);\n                setText_percentage(product.tax_percentage);\n                setCountInStock(product.countInStock);\n                setId(product._id);\n                setImage(product.image);\n                setCatId(product.category ? product.category._id : null)\n                setCategory(product.category ? product.category.name : null)\n                setBrand(product.brand && product.brand);\n            }\n        }\n\n\n\n    }, [dispatch, product, productId, history, successUpdate, categories])\n\n    const submitHandler = (e) => {\n        const data = {\n            id: id,\n            name: name,\n            description: description,\n            price: price,\n            tax_percentage: tax_percentage,\n            countInStock: countInStock,\n            catId: catId,\n            brand: brand\n        }\n        e.preventDefault()\n        dispatch(updateProduct(data, product._id))\n    }\n\n    const uploadFileHandler = async (e) => {\n\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('product_id', id)\n\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('http://localhost:4000/api/product/imageUpload', formData, config)\n            setImage(data.image)\n            console.log(\"data \", data);\n\n\n        } catch (error) {\n\n        }\n    }\n\n    return (\n        <div>\n            <Link to='/admin/productlist'>\n                Go Back\n            </Link>\n            {/* <h1>Edit Product</h1> */}\n            <Row>\n                <Col md={3}>\n                    <Image src={`http://localhost:4000/${image}`} width={200}\n                        height={200} rounded />\n                    <Form.Group controlId='image'>\n                        <Form.File\n                            id='image-file'\n                            label='Choose File'\n                            onChange={uploadFileHandler}\n                        >\n\n                        </Form.File>\n                    </Form.Group>\n                </Col>\n                <Col md={8}>\n                    {loadingUpdate && <Loader />}\n                    {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                    {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                        : (\n\n                            <Form onSubmit={submitHandler}>\n\n\n                                <FormGroup>\n                                <Label for=\"exampleSelect\">Current category : {category}</Label>\n                                <br></br>\n                                    <Label for=\"exampleSelect\">Select A category</Label>\n                                    <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={handleCategory}>\n                                    <option>none</option>\n                                        {\n                                            categories && categories.map((val, ind)=>{\n                                                return(\n                                                    <>\n                                                     <option value={val._id}>{val.name}</option>\n                                                    </>\n                                                )\n                                            })\n                                        }\n                                       \n                                    </Input>\n                                </FormGroup>\n\n                                <Form.Group controlId='brand'>\n                                    <Form.Label>Brand</Form.Label>\n                                    <Form.Control\n\n                                        type='name'\n                                        placeholder='Enter brand'\n                                        value={brand}\n                                        onChange={(e) => setBrand(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='name'>\n                                    <Form.Label>Name</Form.Label>\n                                    <Form.Control\n\n                                        type='name'\n                                        placeholder='Enter name'\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId='description'>\n                                    <Form.Label>Description</Form.Label>\n                                    <Form.Control\n\n                                        type='name'\n                                        placeholder='Enter description'\n                                        value={description}\n                                        onChange={(e) => setDescription(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId='price'>\n                                    <Form.Label>Price</Form.Label>\n                                    <Form.Control\n\n                                        type='number'\n                                        placeholder='Enter price'\n                                        value={price}\n                                        onChange={(e) => setPrice(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId='countinstock'>\n                                    <Form.Label>Stock</Form.Label>\n                                    <Form.Control\n\n                                        type='number'\n                                        placeholder='Enter stock'\n                                        value={countInStock}\n                                        onChange={(e) => setCountInStock(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId='countinstock'>\n                                    <Form.Label>Tax</Form.Label>\n                                    <Form.Control\n\n                                        type='number'\n                                        placeholder='Enter Tax'\n                                        value={tax_percentage}\n                                        onChange={(e) => setText_percentage(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n\n\n                                <Button type='submit' variant='primary'>\n                                    Update\n                                </Button>\n\n                            </Form>\n                        )}\n                </Col>\n\n            </Row>\n        </div>\n\n    )\n}\n\nexport default ProductEditScreen","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\HomeCategoryScree.js",["296","297","298","299","300"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Card, Col, Row, Form } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport { Link } from 'react-router-dom';\nimport Loaders from '../components/Loader';\n\nconst HomeCategoryScreen = ({ match }) => {\n    const id = match.params.id;\n    const [products, setProducts] = useState('');\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n    const [loading, setLoadding] = useState(false);\n\n\n    var total = products && products.review && products.review.length > 0 ? products.review.reduce((accum, item) => accum + item.rating, 0) : 0;\n\n    // State with list of all checked item\n   \n    const [checkList, setChekList] = useState([]);\n    const handleCheck = (event) => {\n        var updatedList = [...checked];\n        if (event.target.checked) {\n            updatedList = [...checked, event.target.value];\n        } else {\n            updatedList.splice(checked.indexOf(event.target.value), 1);\n        }\n        setChecked(updatedList);\n    };\n    const [checked, setChecked] = useState([]);\n    const baseURL = `http://localhost:4000/api/category/getFilterCategories/${id}/data?brand=${checked}`;\n\n\n  \n\n   \n\n    // Generate string of checked items\n    const checkedItems = checked.length\n        ? checked.reduce((total, item) => {\n            return total + \", \" + item;\n        })\n        : \"\";\n\n    // Return classes based on whether item is checked\n    var isChecked = (item) =>\n        checked.includes(item) ? \"checked-item\" : \"not-checked-item\";\n\n\n    useEffect(async () => {\n    \n        try {\n            setLoadding(true);\n            await axios.get(baseURL).then(res => {\n                setProducts(res.data.products);\n                setError('');\n                setChekList(res.data.brands);\n                // setSuccess(res.data.message);\n            })\n            setLoadding(false);\n        }\n\n        catch (error) {\n            setSuccess('');\n            setLoadding(false);\n            setError(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        }\n        \n    }, [id, checked])\n\n\n    return (\n        <>\n            <Row>\n                <Col md={2} className=\"mr-1\">\n\n                    <div className=\"app mt-2\">\n                        <div className=\"checkList\">\n                            <div className=\"title\">Brand</div>\n                            <div className=\"list-container\">\n                                {checkList && checkList.length > 0 && checkList.map((item, index) => (\n                                    <div key={index}>\n                                        <input value={item} type=\"checkbox\" onChange={handleCheck} />\n                                        <span className={isChecked(item)}>{item}</span>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n\n                        <div>\n                            {`brand checked are: ${checkedItems}`}\n                        </div>\n                    </div>\n\n\n                </Col>\n                <Col md={9}>\n                    <Row>\n                        \n                        {   loading ? <Loaders/> :\n                            products && products.map((product, ind) => {\n                                return (\n                                    <>\n                                        <Col md={3} className=\"m-0 p-0\">\n                                            <div className=\"card my-2 p-2 text-center\">\n                                                <strong className=\"ct\">{product.review.length > 0 ? <span class=\"badge badge-info\"><i class=\"fas fa-star\"></i> TOP REVIEWED</span> : <br></br>}</strong>\n                                                <Link to={`/product/${product._id}`}>\n                                                    <Card.Img src={`http://localhost:4000/${product.image}`} className=\"img-fluid ps rounded mx-auto d-block\" />\n                                                </Link>\n\n                                                <Card.Body >\n                                                    <Link to={`/product/${product._id}`} >\n                                                        <Card.Title as=\"div\" >\n                                                            <strong >{product.name}</strong>\n                                                        </Card.Title>\n                                                    </Link>\n\n                                                    <Card.Text as=\"div\" >\n                                                        <div className=\"my-3\">\n                                                            <Rating value={total / product.review.length} text={`${product.review.length} reviews`} color={'#f8e825'} />\n                                                        </div>\n                                                    </Card.Text>\n\n                                                    <Card.Text as=\"h6\" >\n                                                        &#2547;{product.is_offer ? product.price - ((product.price * product.offer_percentage) / 100) : product.price}\n                                                        <br></br><span class=\"text-tl\">{product.is_offer ? '৳' + product.price : null}</span> {product.is_offer ? '-' + product.offer_percentage + '%' : null}\n                                                    </Card.Text>\n                                                </Card.Body>\n                                            </div>\n                                        </Col>\n                                    </>\n                                )\n\n                            })\n                        }\n                    </Row>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\n\nexport default HomeCategoryScreen;","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\CategoryScreen.js",["301","302","303","304","305","306"],"D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\DashboardScreen.js",["307","308","309","310","311","312","313"],"import {React, useState, useEffect} from 'react';\nimport {Row, Col, Card} from 'react-bootstrap';\nimport AdminSideBar from '../admin_components/AdminSideBar';\nimport { useDispatch, useSelector } from 'react-redux'\nimport axios from 'axios';\n\nconst baseURL = \"http://localhost:4000/api/product/dashboard\";\n\n\n\n\n\n\nconst DashboardScreen = ({history}) =>{\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n    const [newCustomers, setNewCustomers] = useState(0);\n    const [pendingOrders, setPendingOrders] = useState(0);\n    const [revenue, setRevenue] = useState(0);\n    const [error, setError] = useState(false);\n    const [profit, setProfit] = useState(null);\n\n    useEffect(() => {\n\n        if (!userInfo) {\n                history.push('/login')\n        }\n        else{\n            if(!userInfo.isAdmin)\n            {\n                history.push('/')\n            }\n            axios.get(baseURL).then(response=>{\n                setNewCustomers(response.data.recent_users);\n                setPendingOrders(response.data.pending_orders);\n            })\n        }\n\n    }, [history, userInfo])\n\n    const data = profit;\n \n\n\n   \n\n\n    return(\n        <div>\n            <h3>Dashboard Screen</h3>\n            <Row >\n                <Col md={3}>\n                    <AdminSideBar/>\n                </Col>\n                <Col md={4}>\n                    <Card\n                        bg=\"info\"\n                        className=\"mb-2 text-white text-center\"\n                    >\n                        <Card.Header className=\"nav-text\"><i class=\"fas fa-shopping-cart\"></i> Pending Orders </Card.Header>\n                        <Card.Body>\n                            <Card.Title>{pendingOrders} </Card.Title>\n                \n                        </Card.Body>\n                    </Card>\n                    <hr></hr>\n               \n                </Col>\n                <Col md={4}>\n                    <Card\n                        bg=\"dark\"\n                        className=\"mb-2 text-white text-center\"\n                    >\n                        <Card.Header className=\"nav-text\"><i class=\"fas fa-users\"></i> Users</Card.Header>\n                        <Card.Body>\n                            <Card.Title>{newCustomers && newCustomers} </Card.Title>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n              \n            </Row>\n        </div>\n    )\n}\n\nexport default DashboardScreen;","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\auth\\ConfirmPassword.js",["314","315","316"],"import axios from 'axios';\nimport { React, useState, useEffect } from 'react';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport Message from '../../components/Message';\n\n\n\nconst ConfirmPassword = ({ match, history }) => {\n\n    const id = match.params.id;\n    const token = match.params.token;\n    const baseURL = `http://localhost:4000/api/user/resetPassword_verification/${id}/${token}`;\n    const baseURL2 = `http://localhost:4000/api/user/updatePassword/${id}/${token}`;\n    const [password, setPassword] = useState('');\n    const [password2, setPassword2] = useState('');\n    const [userInfo, setUser_info] = useState('');\n    const [isValid, setIsValid] = useState(false);\n    const [error, setError] = useState('');\n\n\n    if (userInfo) {\n        localStorage.setItem('userInfo', JSON.stringify(userInfo));\n        history.push('/')\n        window.location.reload();\n    }\n\n    const passwordHandle = async (e) => {\n        e.preventDefault()\n        try {\n            const data = {\n                password: password,\n                password2: password2,\n            }\n            await axios.put(baseURL2, data).then(res => {\n                setUser_info(res.data.userInfo)\n            })\n        }\n        catch (error) {\n            setError(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        }\n    }\n\n\n\n    useEffect(async () => {\n        try {\n            await axios.get(baseURL).then(res => {\n                setIsValid(true);\n            })\n        }\n        catch (error) {\n            setError(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        }\n    }, [id, token, userInfo])\n\n    return (\n        <div>\n\n            {\n                isValid == true ?\n                    <>\n                        <Row>\n                            <Col sm={4}>\n                            </Col>\n                            <Col sm={4}>\n                                <h5>Confirm your new password</h5>\n                                {error && <Message variant='danger'>{error}</Message>}\n                                <form onSubmit={passwordHandle}>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control\n                                    size=\"sm\"\n                                    type='password'\n                                    placeholder='Enter password'\n                                    onChange={(e) => setPassword(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Form.Label>Confirm Password</Form.Label>\n                                <Form.Control\n                                    size=\"sm\"\n                                    type='password'\n                                    placeholder='Enter confirm password'\n                                    onChange={(e) => setPassword2(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Button type=\"submit\" size=\"sm\" className=\"btn-block\">Submit</Button>\n                                </form>\n\n                            </Col>\n                            <Col sm={4}>\n                            </Col>\n                        </Row>\n                    </>\n\n                    :\n                    <>\n                     {error && <Message variant='danger'>{error}</Message>}\n                    </>\n            }\n\n\n        </div>\n    )\n}\n\nexport default ConfirmPassword;","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\auth\\LoginScreen.js",["317"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport FormContainer from '../../components/FormContainer'\nimport { login } from '../../actions/userActions'\n\nfunction LoginScreen({ location, history }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n\n        <Row >\n            <Col md={3}>\n            </Col>\n            <Col>\n                <div className=\"card\">\n                <FormContainer >\n                    <h1>Sign In</h1>\n                    {error && <Message variant='danger'>{error}</Message>}\n                    {loading && <Loader />}\n                    <Form onSubmit={submitHandler}>\n\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control\n                                size=\"sm\"\n                                type='email'\n                                placeholder='Enter Email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n\n                        <Form.Group controlId='password'>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                size=\"sm\"\n                                type='password'\n                                placeholder='Enter Password'\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button size=\"sm\" type='submit' variant='primary' className=\"btn-block\">\n                            Sign In\n                        </Button>\n                    </Form>\n\n                    <Row className='py-3'>\n                        <Col>\n                            New Customer? <Link\n                                to={redirect ? `/register2?redirect=${redirect}` : '/register2'}>\n                                Register\n                            </Link>\n                            \n                        </Col>\n                        <Col>\n                            Recover your account <Link\n                                to={redirect ? `/reset_password?redirect=${redirect}` : '/reset_password'}>\n                                reset password\n                            </Link>\n\n                        </Col>\n                    </Row>\n\n                </FormContainer>\n                </div>\n\n            </Col>\n            <Col md={3}>\n            </Col>\n        </Row>\n        \n      \n    )\n}\n\nexport default LoginScreen\n","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\auth\\RegisterScreen2.js",["318","319","320","321","322","323","324","325"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport FormContainer from '../../components/FormContainer'\nimport { register } from '../../actions/userActions'\nimport axios from 'axios'\n\nconst baseURL = \"http://localhost:4000/api/user/signUp\";\n\nfunction RegisterScreen2({ location, history }) {\n\n    const [firstName, setFirst_name] = useState('')\n    const [lastName, setLast_name] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [password2, setPassword2] = useState('')\n    const [profile_pic, setProfile_pic] = useState('');\n    const [message, setMessage] = useState('')\n    const [isOk, setIsOk] = useState(false);\n    const [error, setError] = useState(null);\n    const [loading, setLoadding] = useState(false)\n    const [success, setSuccess] = useState(false);\n\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n\n    // useEffect(() => {\n    //     if (success) {\n    //         history.push('/otp_screen');\n    //     }\n    // }, [success]);\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != password2) {\n            setError('Passwords do not match')\n        } else {\n            //dispatch(register(name, email, password, mobile))\n            const formData = new FormData();\n            formData.append('firstName', firstName);\n            formData.append('lastName', lastName)\n            formData.append('email', email)\n            formData.append('password', password);\n            formData.append('password2', password2);\n            formData.append('profile_pic', profile_pic);\n\n            setLoadding(true)\n    \n                axios.post(baseURL, formData).then((response) => {\n                    setError('')\n                    setMessage(response.data.message);\n                    setSuccess(true);  \n                }).catch(error =>{\n                    setMessage('')\n                    setError(error.response && error.response.data.detail\n                        ? error.response.data.detail\n                        : \"network error\");\n                })\n            setLoadding(false)\n            \n        }\n       \n\n    }\n\n    const handleFile = (e) =>{\n        setProfile_pic(e.target.files[0]);\n    }\n\n    return (\n\n        <FormContainer>\n            <div className=\"card p-4\">\n                <h1>Register</h1>\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                {message &&  <Message variant='success'>{message}</Message>}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='f name'>\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='name'\n                            placeholder='Enter first name'\n                            value={firstName}\n                            onChange={(e) => setFirst_name(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='l name'>\n                        <Form.Label>last Name</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='name'\n                            placeholder='Enter last name'\n                            value={lastName}\n                            onChange={(e) => setLast_name(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={password2}\n                            onChange={(e) => setPassword2(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='profile pic'>\n                        <Form.Label>profile photo</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='file'\n                            onChange={handleFile}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button size=\"sm\" type='submit' variant='primary' className=\"btn-block mt-4\">\n                        Register\n                    </Button>\n\n                </Form>\n\n                <Row className='py-3'>\n                    <Col>\n                        Have an Account? <Link\n                            to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                            Sign In\n                        </Link>\n                    </Col>\n                </Row>\n            </div>\n        </FormContainer >\n\n    )\n}\n\nexport default RegisterScreen2;\n","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\auth\\ProfileScreen.js",["326","327","328","329","330"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table, Container, Image } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport { getUserDetails, updateUserProfile } from '../../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../../constants/userConstants'\nimport { listMyOrders } from '../../actions/orderActions'\nimport axios from 'axios'\n\nconst baseURL = \"http://localhost:4000/api/user/DPchange\";\n\nfunction ProfileScreen({ history }) {\n\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    \n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [profile_pic, setProfile_pic] = useState('');\n    const [err, setErr] = useState('');\n\n    const [message, setMessage] = useState('')\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success, wrong, msg } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n    const handleFile = (e) => {\n\n        const formData = new FormData();\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        formData.append('profile_pic', e.target.files[0])\n        axios.post(baseURL, formData, config).then((res) => {\n            const data = res.data.file_name;\n            // Get the existing data\n            var existing = localStorage.getItem('userInfo');\n\n            // If no existing data, create an array\n            // Otherwise, convert the localStorage string to an array\n            existing = existing ? JSON.parse(existing) : {};\n            // Add new data to localStorage Array\n            existing['profile_pic'] = data;\n            // Save back to localStorage\n            localStorage.setItem('userInfo', JSON.stringify(existing));\n            setProfile_pic(data);\n            window.location.reload();\n        }).catch(error => {\n            setErr(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        })\n\n    }\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n\n            if (!user || !user.firstName || success || userInfo._id !== user._id) {\n\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n\n            } else {\n\n                setFirstName(user.firstName);\n                setLastName(user.lastName);\n                setEmail(user.email);\n                setProfile_pic(user.profile_pic);\n            }\n        }\n\n    }, [dispatch, history, user, userInfo, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (!password) {\n            setMessage('did not give password')\n        } else {\n            dispatch(updateUserProfile({\n                'firstName': firstName,\n                'lastName': lastName,\n                'email': email,\n                'password': password,\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <div>\n            <Row>\n                <Col md={2}>\n\n                    <Image src={`http://localhost:4000/${profile_pic}`} width={140}\n                        height={140} rounded />\n\n                    <Form.Group controlId='profile pic'>\n                        <Form.Label>profile photo</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='file'\n                            onChange={handleFile}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                </Col>\n                <Col md={3}>\n                    <h2 >Profile</h2>\n\n                    {message && <Message variant='danger'>{message}</Message>}\n                    {msg && <Message variant='success'>{msg}</Message>}\n                    {error && <Message variant='danger'>{error}</Message>}\n                    {wrong && <Message variant='danger'>{wrong}</Message>}\n                    {loading && <Loader />}\n                    <Form onSubmit={submitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control\n                                required\n                                type='name'\n                                placeholder='Enter name'\n                                value={firstName}\n                                onChange={(e) => setFirstName(e.target.value)}\n                                size=\"sm\"\n                            >\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control\n                                required\n                                type='name'\n                                placeholder='Enter name'\n                                value={lastName}\n                                onChange={(e) => setLastName(e.target.value)}\n                                size=\"sm\"\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control\n                                required\n                                type='email'\n                                placeholder='Enter Email'\n                                value={email}\n                                disabled\n                                onChange={(e) => setEmail(e.target.value)}\n                                size=\"sm\"\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='password'>\n                            <span>You cant change password here. this field is just required for updating others field</span>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n\n                                type='password'\n                                placeholder='Enter Password'\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                                size=\"sm\"\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n\n\n\n                        <Button type='submit' variant='primary' size=\"sm\">\n                            Update\n                        </Button>\n\n                    </Form>\n                </Col>\n\n                <Col md={7}>\n                    <h2 >My Recent Orders</h2>\n                    {loadingOrders ? (\n                        <Loader />\n                    ) : errorOrders ? (\n                        <Message variant='danger'>{errorOrders}</Message>\n                    ) : (\n                        <Table striped responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>Date</th>\n                                    <th>Total</th>\n                                    <th>Paid</th>\n                                    <th>Delivered</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>৳{order.totalPrice}</td>\n                                        <td>{order.isPaid ? <i className='fas fa-check' style={{ color: 'green' }}></i> : (\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                        )}</td>\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button className='btn-sm'>Details</Button>\n                                            </LinkContainer>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default ProfileScreen","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\auth\\EmailVerifyScreen.js",["331","332","333","334","335","336"],"import { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport Message from \"../../components/Message\";\n\nconst EmailVerifyScreen = ({match, history}) =>{\n    const id = match.params.id;\n    const token = match.params.token;\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState(false);\n    const [userInfo, setUserInfo] = useState(null);\n    const[loading, setLoading] = useState(false);\n    const baseURL = `http://localhost:4000/api/user/SignUp_verification/${id}/${token}`;\n\n\n    if(userInfo)\n    {\n        localStorage.setItem('userInfo', JSON.stringify(userInfo));\n        history.push('/')\n    }\n\n    useEffect(async () => {\n        try {\n            await axios.get(baseURL).then(res => {\n                setUserInfo(res.data.userInfo)\n            })\n        }\n        catch (error) {\n            setError(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        }\n    }, [id, token, userInfo])\n\n\n\n    return(\n        <>\n       \n       {error && <Message variant='danger'>{error}</Message>}\n      \n        </>\n    )\n}\nexport default EmailVerifyScreen;;\n","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\auth\\ResetPassword.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\components\\SearchBox.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\components\\Rating.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\components\\Message.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\components\\FormContainer.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\components\\Loader.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\constants\\cartConstants.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\constants\\productConstants.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\constants\\userConstants.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\constants\\orderConstants.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\actions\\userActions.js",["337"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_DETAILS_REQUEST_ADMIN,\n    USER_DETAILS_SUCCESS_ADMIN,\n    USER_DETAILS_FAIL_ADMIN,\n\n    \n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\n\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            'http://localhost:4000/api/user/signIn',\n            { 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        const tkn = data.userInfo;\n        localStorage.setItem('userInfo', JSON.stringify(tkn))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\n\n\nexport const register = (otp, email) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'otp': otp, 'email': email },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://localhost:4000/api/user/userProfile/${id}`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetailsAdmin = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST_ADMIN\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://localhost:4000/api/user/userDetails/${id}`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS_ADMIN,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL_ADMIN,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `http://localhost:4000/api/user/updateUser`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        const tkn = data.userInfo;\n        localStorage.setItem('userInfo', JSON.stringify(tkn))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://localhost:4000/api/user`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `http://localhost:4000/api/user/updateUserByAdmin`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","D:\\p-400\\makeup_store-master\\frontend\\src\\actions\\cartActions.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\actions\\orderActions.js",["338","339","340"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `http://localhost:4000/api/order/createOrder`,\n            order,\n            config\n        )\n        console.log(\"data is he\", data);\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://localhost:4000/api/order/orderDetails/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `http://localhost:4000/api/order/orderPay/${id}/pay`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://localhost:4000/api/order/orderDeliver/${order._id}/deliver`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://localhost:4000/api/order/myOrders`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.get(\n            `http://localhost:4000/api/order/allOrders`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","D:\\p-400\\makeup_store-master\\frontend\\src\\actions\\productActions.js",["341"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n    PRODUCT_OFFER_REQUEST,\n    PRODUCT_OFFER_SUCCESS,\n    PRODUCT_OFFER_FAIL,\n\n    PRODUCT_COUPON_REQUEST,\n    PRODUCT_COUPON_SUCCESS,\n    PRODUCT_COUPON_FAIL\n\n} from '../constants/productConstants';\n\nexport const listCoupons = () => async (dispatch) => {\n    try{\n        dispatch({type: PRODUCT_COUPON_REQUEST})\n\n        const { data } = await axios.get(`/api/products/coupons/`)\n\n        dispatch(\n            {\n                type: PRODUCT_COUPON_SUCCESS,\n                payload: data\n\n            }\n        )\n    }\n    catch(error)\n    {\n        dispatch({\n            type: PRODUCT_COUPON_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n\n    }\n}\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`http://localhost:4000/api/product${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listOfferProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_OFFER_REQUEST })\n\n        const { data } = await axios.get(`http://localhost:4000/api/product/offerProduct`)\n\n        dispatch({\n            type: PRODUCT_OFFER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_OFFER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`http://localhost:4000/api/product/getProduct/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo ? userInfo.token : null}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `http://localhost:4000/api/product/deleteProduct/${id}`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo ? userInfo.token : null}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `http://localhost:4000/api/product/createProduct`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product, id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo ?  userInfo.token : null}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `http://localhost:4000/api/product/updateProduct/${id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `http://localhost:4000/api/product/${productId}/createReview`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","D:\\p-400\\makeup_store-master\\frontend\\src\\admin_components\\AdminSideBar.js",["342","343"],"import React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Nav, Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router\";\nimport {Link, NavLink} from 'react-router-dom';\nimport { logout } from '../actions/userActions'\n\n\n\nconst SideBar = (history) => {\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n\n    return (\n        <>\n\n            <Nav className=\"col-md-12 d-none d-md-block bg-dark sidebar p-3 \">\n                <div className=\"sidebar-sticky \"></div>\n                <Nav.Item>\n                    \n                    <NavLink\n                        className=\"navbar-item h5 font-weight-bold ml-3 mt-2 text-white\"\n                        activeClassName=\"is-active\"\n                        to=\"/dashboard\"\n                        exact\n                    >\n                        <i class=\"fas fa-tachometer-alt\"></i> Dashboard\n                    </NavLink>\n                </Nav.Item>\n                <hr></hr>\n                <Nav.Item>\n       \n                    <NavLink\n                        className=\"navbar-item h5 font-weight-bold ml-3 mt-2 text-white\"\n                        activeClassName=\"is-active\"\n                        to=\"/admin/userlist\"\n                        exact\n                    >\n                        <i class=\"fas fa-users\"></i> Users\n                    </NavLink>\n                </Nav.Item>\n                <hr></hr>\n                <Nav.Item>\n                    <NavLink\n                        className=\"navbar-item h5 font-weight-bold ml-3 text-white\"\n                        activeClassName=\"is-active\"\n                        to=\"/category\"\n                        exact\n                    >\n                        <i class=\"fab fa-bandcamp\"></i> Category\n                    </NavLink>\n                </Nav.Item>\n                <hr></hr>\n                <Nav.Item>\n                    <NavLink\n                        className=\"navbar-item h5 font-weight-bold ml-3 text-white\"\n                        activeClassName=\"is-active\"\n                        to=\"/admin/productlist\"\n                        exact\n                    >\n                        <i class=\"fab fa-product-hunt\"></i> Products\n                    </NavLink>\n                </Nav.Item>\n\n                <hr></hr>\n                <Nav.Item>\n                    <NavLink\n                        className=\"navbar-item h5 font-weight-bold ml-3 text-white\"\n                        activeClassName=\"is-active\"\n                        to=\"/admin/orderlist\"\n                        exact\n                    >\n                        <i class=\"fab fa-first-order\"></i> Orders\n                    </NavLink>\n                </Nav.Item>\n                <hr></hr>\n                {/* <Nav.Item>\n                    <NavLink\n                        className=\"navbar-item h5 font-weight-bold ml-3 text-white\"\n                        activeClassName=\"is-active\"\n                        to=\"/admin/contact\"\n                        exact\n                    >\n                        <i class=\"fas fa-file-signature\"></i> Contacts\n                    </NavLink>\n                </Nav.Item> */}\n                <hr></hr>\n                <Nav.Item>\n                    <Link\n                        className=\"navbar-item h5 font-weight-bold ml-3 text-white\"\n                        activeClassName=\"is-active\"\n                        onClick={logoutHandler}\n                        to=\"/\"\n                        \n                    >\n                        <i class=\"fas fa-sign-out-alt\"></i> Logout\n                    </Link>\n                </Nav.Item>\n                \n                <div style={{marginBottom: \"1200px\"}}>\n\n                </div>\n            </Nav>\n\n        </>\n    );\n};\nconst AdminSideBar = withRouter(SideBar);\nexport default AdminSideBar;","D:\\p-400\\makeup_store-master\\frontend\\src\\components\\Paginate.js",["344"],"\nimport * as React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Pagination from '@mui/material/Pagination';\n\nexport default function Paginate({ pages, page, keyword = '', isAdmin = '' }) {\n    const history = useHistory();\n\n    const [cur, setCur] = React.useState(null); \n\n    if (keyword) {\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n    const handleChange = (event, value) => {\n        if (isAdmin) {\n            history.push(`/admin/productlist/?keyword=${keyword}&page=${value}`);\n        }\n        else {\n            history.push(`/?keyword=${keyword}&page=${value}`);\n        }\n        setCur(value);\n    }\n    return (\n        <>\n            {\n                pages ? <Pagination count={parseInt(pages)} page={parseInt(page)} color=\"secondary\" onChange={handleChange} /> : null\n            }\n        </>\n    );\n}\n","D:\\p-400\\makeup_store-master\\frontend\\src\\components\\TopProducts.js",["345","346","347","348","349","350","351"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport {Container} from 'react-bootstrap';\nimport Loader from './Loader'\nimport Message from './Message'\n\nfunction TopProducts({products}) {\n\n    \n\n\n    return (<div className=\"bg-primary\">\n                <Carousel  autoPlay=\"true\" infiniteLoop=\"true\" useKeyboardArrows=\"true\"  interval=\"3000\" stopOnHover=\"true\" className=\"br\" >\n                    \n                    {products && products.map((product, ind)   => (\n                        <Link to={`/product/${product._id}`}>\n\n                        <div >\n                            \n                            <img src={`http://localhost:4000/${product.image}`} />\n                            <p className=\"legend\"> <h6 className=\"text-white\">Top product {ind + 1} : {product.name} <br></br> price &#x9F3;({product.price})  </h6> </p>\n                        \n                        </div>\n                        </Link>\n\n                    ))}\n                   \n        \n                </Carousel>\n            </div>\n\n    )\n}\n\nexport default TopProducts\n","D:\\p-400\\makeup_store-master\\frontend\\src\\components\\Product.js",[],"D:\\p-400\\makeup_store-master\\frontend\\src\\components\\Category.js",["352"],"import React from 'react'\nimport { Card, Row, Col } from 'react-bootstrap'\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom'\n\nconst Category = ({ categories }) => {\n    console.log(\"cat \", categories)\n    return (\n        <>  <h5 className=\"mt-4 mb-4 text-center\">categories</h5>\n        <Row className='p-0 bg-secondary  p-2 bg-white'>\n            {\n                categories && categories.map((val, ind) => {\n                    return (\n                        <>\n                            <Col md={2} className='p-0 m-0 cardd'>\n\n                                <div className=\"card text-center\">\n\n                                    <Link to={`/cat_home/${val._id}`}>\n                                        <Card.Img src={`http://localhost:4000/${val.image}`} style={{maxHeight: '80px', maxWidth: '80px', minHeight: '80px', minWidth: '80px'}} className=\"mt-1\"/>\n                                    </Link>\n\n                                    <Card.Body >\n                                        <Link to={`/cat_home/${val._id}`} >\n                                            <Card.Title as=\"div\" >\n                                                <strong >{val.name}</strong>\n                                            </Card.Title>\n                                        </Link>\n\n                                    </Card.Body>\n                                </div>\n\n                            </Col>\n                        </>\n                    )\n                })\n            }\n        </Row>\n        </>\n    )\n}\nexport default Category;","D:\\p-400\\makeup_store-master\\frontend\\src\\screens\\newpage.js",[],{"ruleId":"353","replacedBy":"354"},{"ruleId":"355","replacedBy":"356"},{"ruleId":"357","severity":1,"message":"358","line":2,"column":39,"nodeType":"359","messageId":"360","endLine":2,"endColumn":45},{"ruleId":"357","severity":1,"message":"361","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":26},{"ruleId":"357","severity":1,"message":"362","line":1,"column":28,"nodeType":"359","messageId":"360","endLine":1,"endColumn":36},{"ruleId":"357","severity":1,"message":"363","line":3,"column":34,"nodeType":"359","messageId":"360","endLine":3,"endColumn":37},{"ruleId":"357","severity":1,"message":"364","line":4,"column":58,"nodeType":"359","messageId":"360","endLine":4,"endColumn":67},{"ruleId":"357","severity":1,"message":"364","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":19},{"ruleId":"357","severity":1,"message":"365","line":5,"column":58,"nodeType":"359","messageId":"360","endLine":5,"endColumn":63},{"ruleId":"357","severity":1,"message":"366","line":11,"column":27,"nodeType":"359","messageId":"360","endLine":11,"endColumn":39},{"ruleId":"357","severity":1,"message":"367","line":11,"column":41,"nodeType":"359","messageId":"360","endLine":11,"endColumn":61},{"ruleId":"357","severity":1,"message":"368","line":11,"column":63,"nodeType":"359","messageId":"360","endLine":11,"endColumn":74},{"ruleId":"357","severity":1,"message":"369","line":14,"column":7,"nodeType":"359","messageId":"360","endLine":14,"endColumn":14},{"ruleId":"357","severity":1,"message":"370","line":20,"column":12,"nodeType":"359","messageId":"360","endLine":20,"endColumn":16},{"ruleId":"357","severity":1,"message":"371","line":20,"column":18,"nodeType":"359","messageId":"360","endLine":20,"endColumn":25},{"ruleId":"357","severity":1,"message":"372","line":21,"column":12,"nodeType":"359","messageId":"360","endLine":21,"endColumn":16},{"ruleId":"357","severity":1,"message":"373","line":21,"column":18,"nodeType":"359","messageId":"360","endLine":21,"endColumn":25},{"ruleId":"357","severity":1,"message":"374","line":43,"column":11,"nodeType":"359","messageId":"360","endLine":43,"endColumn":21},{"ruleId":"375","severity":1,"message":"376","line":195,"column":84,"nodeType":"377","messageId":"378","endLine":195,"endColumn":86},{"ruleId":"357","severity":1,"message":"361","line":1,"column":27,"nodeType":"359","messageId":"360","endLine":1,"endColumn":36},{"ruleId":"379","severity":1,"message":"380","line":144,"column":8,"nodeType":"381","endLine":144,"endColumn":62,"suggestions":"382"},{"ruleId":"357","severity":1,"message":"362","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"364","line":3,"column":20,"nodeType":"359","messageId":"360","endLine":3,"endColumn":29},{"ruleId":"357","severity":1,"message":"383","line":3,"column":31,"nodeType":"359","messageId":"360","endLine":3,"endColumn":35},{"ruleId":"357","severity":1,"message":"384","line":3,"column":37,"nodeType":"359","messageId":"360","endLine":3,"endColumn":46},{"ruleId":"357","severity":1,"message":"385","line":2,"column":8,"nodeType":"359","messageId":"360","endLine":2,"endColumn":13},{"ruleId":"357","severity":1,"message":"386","line":3,"column":52,"nodeType":"359","messageId":"360","endLine":3,"endColumn":62},{"ruleId":"357","severity":1,"message":"387","line":3,"column":64,"nodeType":"359","messageId":"360","endLine":3,"endColumn":75},{"ruleId":"357","severity":1,"message":"383","line":3,"column":77,"nodeType":"359","messageId":"360","endLine":3,"endColumn":81},{"ruleId":"357","severity":1,"message":"388","line":3,"column":83,"nodeType":"359","messageId":"360","endLine":3,"endColumn":94},{"ruleId":"357","severity":1,"message":"389","line":13,"column":12,"nodeType":"359","messageId":"360","endLine":13,"endColumn":23},{"ruleId":"357","severity":1,"message":"390","line":13,"column":25,"nodeType":"359","messageId":"360","endLine":13,"endColumn":39},{"ruleId":"357","severity":1,"message":"391","line":14,"column":12,"nodeType":"359","messageId":"360","endLine":14,"endColumn":30},{"ruleId":"357","severity":1,"message":"392","line":14,"column":32,"nodeType":"359","messageId":"360","endLine":14,"endColumn":53},{"ruleId":"357","severity":1,"message":"393","line":15,"column":12,"nodeType":"359","messageId":"360","endLine":15,"endColumn":19},{"ruleId":"357","severity":1,"message":"394","line":15,"column":21,"nodeType":"359","messageId":"360","endLine":15,"endColumn":31},{"ruleId":"357","severity":1,"message":"395","line":16,"column":28,"nodeType":"359","messageId":"360","endLine":16,"endColumn":45},{"ruleId":"357","severity":1,"message":"396","line":19,"column":19,"nodeType":"359","messageId":"360","endLine":19,"endColumn":27},{"ruleId":"357","severity":1,"message":"397","line":20,"column":12,"nodeType":"359","messageId":"360","endLine":20,"endColumn":21},{"ruleId":"357","severity":1,"message":"398","line":20,"column":23,"nodeType":"359","messageId":"360","endLine":20,"endColumn":35},{"ruleId":"357","severity":1,"message":"399","line":21,"column":12,"nodeType":"359","messageId":"360","endLine":21,"endColumn":21},{"ruleId":"357","severity":1,"message":"400","line":21,"column":23,"nodeType":"359","messageId":"360","endLine":21,"endColumn":35},{"ruleId":"357","severity":1,"message":"401","line":22,"column":12,"nodeType":"359","messageId":"360","endLine":22,"endColumn":21},{"ruleId":"357","severity":1,"message":"402","line":22,"column":23,"nodeType":"359","messageId":"360","endLine":22,"endColumn":35},{"ruleId":"357","severity":1,"message":"403","line":23,"column":12,"nodeType":"359","messageId":"360","endLine":23,"endColumn":21},{"ruleId":"357","severity":1,"message":"404","line":23,"column":23,"nodeType":"359","messageId":"360","endLine":23,"endColumn":35},{"ruleId":"357","severity":1,"message":"405","line":30,"column":13,"nodeType":"359","messageId":"360","endLine":30,"endColumn":21},{"ruleId":"379","severity":1,"message":"406","line":49,"column":8,"nodeType":"381","endLine":49,"endColumn":28,"suggestions":"407"},{"ruleId":"379","severity":1,"message":"408","line":49,"column":9,"nodeType":"381","endLine":49,"endColumn":27},{"ruleId":"357","severity":1,"message":"361","line":1,"column":27,"nodeType":"359","messageId":"360","endLine":1,"endColumn":36},{"ruleId":"357","severity":1,"message":"364","line":2,"column":29,"nodeType":"359","messageId":"360","endLine":2,"endColumn":38},{"ruleId":"357","severity":1,"message":"409","line":7,"column":8,"nodeType":"359","messageId":"360","endLine":7,"endColumn":21},{"ruleId":"357","severity":1,"message":"362","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"362","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"362","line":1,"column":18,"nodeType":"359","messageId":"360","endLine":1,"endColumn":26},{"ruleId":"357","severity":1,"message":"410","line":34,"column":11,"nodeType":"359","messageId":"360","endLine":34,"endColumn":24},{"ruleId":"375","severity":1,"message":"376","line":79,"column":119,"nodeType":"377","messageId":"378","endLine":79,"endColumn":121},{"ruleId":"357","severity":1,"message":"411","line":5,"column":24,"nodeType":"359","messageId":"360","endLine":5,"endColumn":32},{"ruleId":"357","severity":1,"message":"409","line":9,"column":8,"nodeType":"359","messageId":"360","endLine":9,"endColumn":21},{"ruleId":"357","severity":1,"message":"412","line":12,"column":10,"nodeType":"359","messageId":"360","endLine":12,"endColumn":18},{"ruleId":"357","severity":1,"message":"413","line":13,"column":8,"nodeType":"359","messageId":"360","endLine":13,"endColumn":21},{"ruleId":"357","severity":1,"message":"414","line":14,"column":8,"nodeType":"359","messageId":"360","endLine":14,"endColumn":23},{"ruleId":"357","severity":1,"message":"366","line":14,"column":27,"nodeType":"359","messageId":"360","endLine":14,"endColumn":39},{"ruleId":"357","severity":1,"message":"367","line":14,"column":41,"nodeType":"359","messageId":"360","endLine":14,"endColumn":61},{"ruleId":"357","severity":1,"message":"368","line":14,"column":63,"nodeType":"359","messageId":"360","endLine":14,"endColumn":74},{"ruleId":"357","severity":1,"message":"383","line":3,"column":26,"nodeType":"359","messageId":"360","endLine":3,"endColumn":30},{"ruleId":"357","severity":1,"message":"415","line":11,"column":12,"nodeType":"359","messageId":"360","endLine":11,"endColumn":17},{"ruleId":"357","severity":1,"message":"416","line":12,"column":12,"nodeType":"359","messageId":"360","endLine":12,"endColumn":19},{"ruleId":"379","severity":1,"message":"417","line":50,"column":15,"nodeType":"418","endLine":71,"endColumn":6},{"ruleId":"379","severity":1,"message":"419","line":71,"column":8,"nodeType":"381","endLine":71,"endColumn":21,"suggestions":"420"},{"ruleId":"357","severity":1,"message":"386","line":2,"column":35,"nodeType":"359","messageId":"360","endLine":2,"endColumn":45},{"ruleId":"357","severity":1,"message":"387","line":2,"column":47,"nodeType":"359","messageId":"360","endLine":2,"endColumn":58},{"ruleId":"379","severity":1,"message":"417","line":128,"column":15,"nodeType":"418","endLine":153,"endColumn":6},{"ruleId":"379","severity":1,"message":"421","line":153,"column":8,"nodeType":"381","endLine":153,"endColumn":18,"suggestions":"422"},{"ruleId":"375","severity":1,"message":"376","line":166,"column":46,"nodeType":"377","messageId":"378","endLine":166,"endColumn":48},{"ruleId":"375","severity":1,"message":"376","line":197,"column":38,"nodeType":"377","messageId":"378","endLine":197,"endColumn":40},{"ruleId":"357","severity":1,"message":"423","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":21},{"ruleId":"357","severity":1,"message":"424","line":20,"column":12,"nodeType":"359","messageId":"360","endLine":20,"endColumn":19},{"ruleId":"357","severity":1,"message":"425","line":20,"column":21,"nodeType":"359","messageId":"360","endLine":20,"endColumn":31},{"ruleId":"357","severity":1,"message":"415","line":21,"column":12,"nodeType":"359","messageId":"360","endLine":21,"endColumn":17},{"ruleId":"357","severity":1,"message":"426","line":21,"column":19,"nodeType":"359","messageId":"360","endLine":21,"endColumn":27},{"ruleId":"357","severity":1,"message":"427","line":22,"column":20,"nodeType":"359","messageId":"360","endLine":22,"endColumn":29},{"ruleId":"357","severity":1,"message":"428","line":42,"column":11,"nodeType":"359","messageId":"360","endLine":42,"endColumn":15},{"ruleId":"379","severity":1,"message":"417","line":47,"column":15,"nodeType":"418","endLine":58,"endColumn":6},{"ruleId":"379","severity":1,"message":"419","line":58,"column":8,"nodeType":"381","endLine":58,"endColumn":29,"suggestions":"429"},{"ruleId":"375","severity":1,"message":"376","line":64,"column":25,"nodeType":"377","messageId":"378","endLine":64,"endColumn":27},{"ruleId":"357","severity":1,"message":"430","line":3,"column":34,"nodeType":"359","messageId":"360","endLine":3,"endColumn":38},{"ruleId":"357","severity":1,"message":"361","line":1,"column":27,"nodeType":"359","messageId":"360","endLine":1,"endColumn":36},{"ruleId":"357","severity":1,"message":"431","line":4,"column":23,"nodeType":"359","messageId":"360","endLine":4,"endColumn":34},{"ruleId":"357","severity":1,"message":"432","line":8,"column":10,"nodeType":"359","messageId":"360","endLine":8,"endColumn":18},{"ruleId":"357","severity":1,"message":"433","line":22,"column":12,"nodeType":"359","messageId":"360","endLine":22,"endColumn":16},{"ruleId":"357","severity":1,"message":"434","line":22,"column":18,"nodeType":"359","messageId":"360","endLine":22,"endColumn":25},{"ruleId":"357","severity":1,"message":"416","line":25,"column":12,"nodeType":"359","messageId":"360","endLine":25,"endColumn":19},{"ruleId":"357","severity":1,"message":"435","line":28,"column":11,"nodeType":"359","messageId":"360","endLine":28,"endColumn":19},{"ruleId":"375","severity":1,"message":"436","line":42,"column":22,"nodeType":"377","messageId":"378","endLine":42,"endColumn":24},{"ruleId":"357","severity":1,"message":"437","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":14},{"ruleId":"357","severity":1,"message":"364","line":3,"column":41,"nodeType":"359","messageId":"360","endLine":3,"endColumn":50},{"ruleId":"357","severity":1,"message":"438","line":22,"column":12,"nodeType":"359","messageId":"360","endLine":22,"endColumn":27},{"ruleId":"357","severity":1,"message":"439","line":22,"column":29,"nodeType":"359","messageId":"360","endLine":22,"endColumn":47},{"ruleId":"357","severity":1,"message":"440","line":24,"column":12,"nodeType":"359","messageId":"360","endLine":24,"endColumn":15},{"ruleId":"357","severity":1,"message":"416","line":9,"column":12,"nodeType":"359","messageId":"360","endLine":9,"endColumn":19},{"ruleId":"357","severity":1,"message":"441","line":9,"column":21,"nodeType":"359","messageId":"360","endLine":9,"endColumn":31},{"ruleId":"357","severity":1,"message":"442","line":11,"column":11,"nodeType":"359","messageId":"360","endLine":11,"endColumn":18},{"ruleId":"357","severity":1,"message":"443","line":11,"column":20,"nodeType":"359","messageId":"360","endLine":11,"endColumn":30},{"ruleId":"379","severity":1,"message":"417","line":21,"column":15,"nodeType":"418","endLine":32,"endColumn":6},{"ruleId":"379","severity":1,"message":"419","line":32,"column":8,"nodeType":"381","endLine":32,"endColumn":29,"suggestions":"444"},{"ruleId":"357","severity":1,"message":"445","line":21,"column":5,"nodeType":"359","messageId":"360","endLine":21,"endColumn":30},{"ruleId":"357","severity":1,"message":"446","line":14,"column":5,"nodeType":"359","messageId":"360","endLine":14,"endColumn":20},{"ruleId":"357","severity":1,"message":"447","line":19,"column":5,"nodeType":"359","messageId":"360","endLine":19,"endColumn":24},{"ruleId":"357","severity":1,"message":"448","line":28,"column":5,"nodeType":"359","messageId":"360","endLine":28,"endColumn":24},{"ruleId":"357","severity":1,"message":"428","line":171,"column":17,"nodeType":"359","messageId":"360","endLine":171,"endColumn":21},{"ruleId":"357","severity":1,"message":"431","line":2,"column":23,"nodeType":"359","messageId":"360","endLine":2,"endColumn":34},{"ruleId":"357","severity":1,"message":"449","line":3,"column":15,"nodeType":"359","messageId":"360","endLine":3,"endColumn":21},{"ruleId":"357","severity":1,"message":"450","line":9,"column":12,"nodeType":"359","messageId":"360","endLine":9,"endColumn":15},{"ruleId":"357","severity":1,"message":"361","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":26},{"ruleId":"357","severity":1,"message":"423","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":21},{"ruleId":"357","severity":1,"message":"431","line":2,"column":23,"nodeType":"359","messageId":"360","endLine":2,"endColumn":34},{"ruleId":"357","severity":1,"message":"364","line":6,"column":9,"nodeType":"359","messageId":"360","endLine":6,"endColumn":18},{"ruleId":"357","severity":1,"message":"451","line":7,"column":8,"nodeType":"359","messageId":"360","endLine":7,"endColumn":14},{"ruleId":"357","severity":1,"message":"452","line":8,"column":8,"nodeType":"359","messageId":"360","endLine":8,"endColumn":15},{"ruleId":"453","severity":1,"message":"454","line":23,"column":29,"nodeType":"455","endLine":23,"endColumn":83},{"ruleId":"357","severity":1,"message":"456","line":3,"column":8,"nodeType":"359","messageId":"360","endLine":3,"endColumn":14},"no-native-reassign",["457"],"no-negated-in-lhs",["458"],"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'Row' is defined but never used.","'Container' is defined but never used.","'Modal' is defined but never used.","'processNodes' is defined but never used.","'convertNodeToElement' is defined but never used.","'htmlparser2' is defined but never used.","'baseURL' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'product_id' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["459"],"'Form' is defined but never used.","'ListGroup' is defined but never used.","'axios' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'ButtonGroup' is defined but never used.","'coupon_code' is assigned a value but never used.","'setCoupon_code' is assigned a value but never used.","'coupon_code_status' is assigned a value but never used.","'setCoupon_code_status' is assigned a value but never used.","'user_id' is assigned a value but never used.","'setUser_id' is assigned a value but never used.","'setTotal_discount' is assigned a value but never used.","'setCount' is assigned a value but never used.","'coinPrice' is assigned a value but never used.","'setCoinPrice' is assigned a value but never used.","'userCoins' is assigned a value but never used.","'setUserCoins' is assigned a value but never used.","'leftCoins' is assigned a value but never used.","'setLeftCoins' is assigned a value but never used.","'coupon_id' is assigned a value but never used.","'setCoupon_id' is assigned a value but never used.","'userInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'order._id', and 'success'. Either include them or remove the dependency array.",["460"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","'FormContainer' is defined but never used.","'deleteHandler' is assigned a value but never used.","'FormText' is defined but never used.","'CKEditor' is defined but never used.","'ClassicEditor' is defined but never used.","'ReactHtmlParser' is defined but never used.","'error' is assigned a value but never used.","'success' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'baseURL'. Either include it or remove the dependency array.",["461"],"React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.",["462"],"'useDispatch' is defined but never used.","'revenue' is assigned a value but never used.","'setRevenue' is assigned a value but never used.","'setError' is assigned a value but never used.","'setProfit' is assigned a value but never used.","'data' is assigned a value but never used.",["463"],"'Card' is defined but never used.","'useSelector' is defined but never used.","'register' is defined but never used.","'isOk' is assigned a value but never used.","'setIsOk' is assigned a value but never used.","'dispatch' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Link' is defined but never used.","'confirmPassword' is assigned a value but never used.","'setConfirmPassword' is assigned a value but never used.","'err' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["464"],"'USER_UPDATE_PROFILE_RESET' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'Button' is defined but never used.","'cur' is assigned a value but never used.","'Loader' is defined but never used.","'Message' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Rating' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},{"desc":"469","fix":"470"},{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"473","fix":"475"},"Update the dependencies array to be: [order, dispatch, orderId, successPay, successDeliver, userInfo, history]",{"range":"476","text":"477"},"Update the dependencies array to be: [dispatch, history, order._id, success]",{"range":"478","text":"479"},"Update the dependencies array to be: [id, checked, baseURL]",{"range":"480","text":"481"},"Update the dependencies array to be: [category, config]",{"range":"482","text":"483"},"Update the dependencies array to be: [baseURL, id, token, userInfo]",{"range":"484","text":"485"},{"range":"486","text":"485"},[5240,5294],"[order, dispatch, orderId, successPay, successDeliver, userInfo, history]",[2064,2084],"[dispatch, history, order._id, success]",[2214,2227],"[id, checked, baseURL]",[5054,5064],"[category, config]",[1754,1775],"[baseURL, id, token, userInfo]",[1005,1026]]